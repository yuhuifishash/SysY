const int POW2[20] = {1,     2,     4,     8,      16,     32,    64,
                      128,   256,   512,   1024,   2048,   4096,  8192,
                      16384, 32768, 65536, 131072, 262144, 524288};
int shl(int a,int shift)
{
    return a*POW2[shift];
}

int shr(int a,int shift)
{
    return a/POW2[shift];
}

int or(int a,int b)
{
    int i=0;
    int ans = 0;
    int p2 = 1;
    while(i<30){
        int t1=a%2,t2=b%2;
        if(t1+t2>=1){
            ans = ans + p2;
        }
        p2 = p2*2;
        a = a/2;
        b = b/2;
        i = i + 1;
    }
    return ans;
}

int and(int a,int b)
{
    int i=0;
    int ans = 0;
    int p2 = 1;
    while(i<30){
        int t1=a%2,t2=b%2;
        if(t1+t2==2){
            ans = ans + p2;
        }
        p2 = p2*2;
        a = a/2;
        b = b/2;
        i = i + 1;
    }
    return ans;
}

int xor(int a,int b)
{
    int i=0;
    int ans = 0;
    int p2 = 1;
    while(i<30){
        int t1=a%2,t2=b%2;
        if(t1+t2==1){
            ans = ans + p2;
        }
        p2 = p2*2;
        a = a/2;
        b = b/2;
        i = i + 1;
    }
    return ans;
}

int main()
{
    int T = getint();
    while(T){
        T = T-1;
        int a=getint(),b=getint(),s=getint();
        putf("a=%d b=%d s=%d a<<s=%d a>>s=%d a&b=%d a|b=%d a^b=%d\n",a,b,s,shl(a,s),shr(a,s),and(a,b),or(a,b),xor(a,b));
    }
    return 0;
}