int x[7][7][7][8][105][4] = {};
int y[7][7][7][8][105][4] = {};
int z[7][7][7][8][105][4] = {};
void update_array(int t[][7][7][8][105][4],int id2,int id3,int id4,int id5)
{;
    int i = 0;
	t[i][id2][id3][id4][id5][1] = t[i][id2][id3][id4][id5][1]+2;
	t[i][id2][id3][id4][id5][0] = t[i][id2][id3][id4][id5][2]+3;
	t[i][id2][id3][id4][id5][2] = t[i][id2][id3][id4][id5][3]+4;
	t[i][id2][id3][id4][id5][3] = t[i][id2][id3][id4][id5][0]+5;
    while(i < 6 && t[i][id2][id3][id4][id5][1]){
        t[i+1][id2][id3][id4][id5][1] = (t[i][id2][id3][id4][id5][2]+11)%23;
        i = i + 1;
    }
	i = 0;
	while(i < 6 && t[i][id2][id3][id4][id5][2]){
        t[i+1][id2][id3][id4][id5][2] = (t[i][id2][id3][id4][id5][1]+3)%34;
        i = i + 1;
    }
	i = 0;
	while(i < 6 && t[i][id2][id3][id4][id5][3]){
        t[i+1][id2][id3][id4][id5][3] = (t[i][id2][id3][id4][id5][0]+9)%55;
        i = i + 1;
    }
	i = 0;
	while(i < 6 && t[i][id2][id3][id4][id5][0]){
        t[i+1][id2][id3][id4][id5][0] = (t[i][id2][id3][id4][id5][0]+7)%13;
        i = i + 1;
    }
}

int main()
{
    int S = 0;
    int si1 = getint(),si2 = getint(),si3 = getint(),si4 = getint(),si5 = getint(),si6 = getint();
    int ed = getint();
    int i1 = si1;
    while(i1 <= 5){
        int i2 = si2;
        while(i2 < 4){
            x[i1][i2][2][3][4][2] = si1+si2+si3+si4+si5+si6;
            x[i1][i2+1][1][1][60][0] = si1+si2+si3+si4+si5+si6;
            x[i1+1][i2+2][3][1][20][0] = si1+si2+si3+si4+si5+si6;
            y[i1][i2][2][3][49][2] = si1+si2+si3+si4+si5+si6;
            y[i1][i2+1][1][1][0][0] = si1+si2+si3+si4+si5+si6;
            y[i1+1][i2+2][3][1][20][0] = si1+si2+si3+si4+si5+si6;
            z[i1][i2][2][3][91][2] = si1+si2+si3+si4+si5+si6;
            z[i1][i2+1][1][3][90][0] = si1+si2+si3+si4+si5+si6;
            z[i1+1][i2+2][3][1][50][0] = si1+si2+si3+si4+si5+si6;
            i2 = i2 + 1;
        }
        int i22 = 7;
        while(i22 > 0){
            int i3 = si3;
            while(i3 < 5){
                int i4 = si4;
                while(i4 < 7){
                    int i5 = si5;
                    while(i5 < 100){
                        int i44 = 2;
                        S = S + x[i1][i2][i3][i4][i5][0];
                        x[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + y[i1][i2][i3][i4][i5][0];
                        z[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + x[i1][i22][i3][i4][i5][0];
                        while(i44 < ed){
                            x[i1][i22][i3][i44][i5][0] = x[i1][i22][i3][i44][i5][0] + 20;
                            x[i1][i22][i3][i44][i5][1] = x[i1][i22][i3][i44][i5][1] + 21;
                            x[i1][i22][i3][i44][i5][2] = x[i1][i22][i3][i44][i5][0] + 22;
                            x[i1][i22][i3][i44][i5][3] = x[i1][i22][i3][i44][i5][2] + 23;
                            i44 = i44 + 1;
                        }
                        S = S + x[i1][i2][i3][i4][i5][0] + x[i1][i2][i3][i44][i5][0];
                        S = S + z[i1][i2][i3][i4][i5][0] + z[i1][i2][i3][i44-1][i5][1];
                        S = S + x[i1][i2][i3][i4][i5][0] + y[i1][i22][i3][i44-2][i5][2];
                        S = S + y[i1][i2][i3][i4][i5][0] + y[i1][i22][i3][i44-2][i5][3];


                        i44 = 1;
                        S = S + x[i1][i2][i3][i4][i5][0];
                        x[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + y[i1][i2][i3][i4][i5][0];
                        z[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + x[i1][i22][i3][i4][i5][0];
                        while(i44 < ed){
                            update_array(y,i22,i3,i44,i5);
                            x[i1][i22][i3][i44][i5][0] = x[i1][i22][i3][i44][i5][0] + 20;
                            x[i1][i22][i3][i44][i5][1] = x[i1][i22][i3][i44][i5][1] + 21;
                            x[i1][i22][i3][i44][i5][2] = x[i1][i22][i3][i44][i5][0] + 22;
                            x[i1][i22][i3][i44][i5][3] = x[i1][i22][i3][i44][i5][2] + 23;
                            i44 = i44 + 1;
                        }
                        S = S + x[i1][i2][i3][i4][i5][0] + x[i1][i2][i3][i44][i5][0];
                        S = S + z[i1][i2][i3][i4][i5][0] + z[i1][i2][i3][i44-1][i5][1];
                        S = S + x[i1][i2][i3][i4][i5][0] + y[i1][i22][i3][i44-2][i5][2];
                        S = S + y[i1][i2][i3][i4][i5][0] + y[i1][i22][i3][i44-2][i5][3];


                        i44 = 0;
                        S = S + x[i1][i2][i3][i4][i5][0];
                        x[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + y[i1][i2][i3][i4][i5][0];
                        z[i1][i2][i3][i4][i5][0] = x[i1][i2][i3][i4][i5][0] + x[i1][i22][i3][i4][i5][0];
                        while(i44 < ed){
                            update_array(z,i22,i3,i44,i5);
                            x[i1][i22][i3][i44][i5][0] = x[i1][i22][i3][i44][i5][0] + 20;
                            x[i1][i22][i3][i44][i5][1] = x[i1][i22][i3][i44][i5][1] + 21;
                            x[i1][i22][i3][i44][i5][2] = x[i1][i22][i3][i44][i5][0] + 22;
                            x[i1][i22][i3][i44][i5][3] = x[i1][i22][i3][i44][i5][2] + 23;
                            i44 = i44 + 1;
                        }
                        S = S + x[i1][i2][i3][i4][i5][0] + x[i1][i22][i3][i44][i5][0];
                        S = S + z[i1][i2][i3][i4][i5][0] + z[i1][i2][i3][i44-1][i5][1];
                        S = S + x[i1][i2][i3][i4][i5][0] + y[i1][i22][i3][i44-2][i5][2];
                        S = S + y[i1][i2][i3][i4][i5][0] + y[i1][i2][i3][i44-2][i5][3];
                        S = S % 998244353;
                        i5 = i5 + 3;
                    }
                    i4 = i4 + 1;
                }
                i3 = i3 + 2;
            }
            i22 = i22 - 1;
        }
        i1 = i1 + 1;
    }
    putint(S);
    putch(10);
    int i = 0;
    while(i < 7){
        int j = 0;
        while(j < 7){
            int k = 0;
            while(k < 100){
				int k2 = 0;
				while(k2 < 8){
					int k3 = 0;
					while(k3 < 4){
						int k4 = 0;
						while(k4 < 7){
							putint(x[i][j][k4][k2][k][k3]);
							putch(32);
							putint(y[i][j][k4][k2][k][k3]);
							putch(32);
							putint(z[i][j][k4][k2][k][k3]);
							putch(32);
							k4 = k4 + 1;
						}
						putch(10);
						k3 = k3 + 1;
					}
					k2 = k2 + 2;
				}
                k = k + 10;
            }
            j = j + 2;
        }
        i = i + 3;
    }
    return 0;
}