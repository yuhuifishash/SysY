const int mod=998244353;
int a[22][100005],b[22][100005],h[22][100005],n,t;

int p2[31]={};

// all the numbers are unsigned int
int shl(int a,int bits){
    return a*p2[bits];
}
int shr(int a,int bits){
    return a/p2[bits];
}


int popcount(int a){
    int a_bits[32]={};
    int i = 0;
    while(a){
        a_bits[i] = a%2;
        a = a/2;
        i = i + 1;
    }
    int ans = 0;
    i = 0;
    while(i < 30){
        if(a_bits[i]== 1){
            ans = ans + 1;
        }
        i = i + 1;
    }
    return ans;
}

void fwt(int a[],int n,int flag){
	@for(int i=1;i<n;i=i*2)
	@for(int len=i*2,j=0;j<n;j=j+len)
	@for(int k=0;k<i;k=k+1){
		if (flag==1)a[j+k+i]=(a[j+k]+a[j+k+i])%mod;
		else a[j+k+i]=(a[j+k+i]-a[j+k]+mod)%mod;
	}
}


int main(){
    p2[0] = 1;
    int i = 1;
    while(i<31){
        p2[i] = p2[i-1]*2;
        i = i + 1;
    }

	n=getint();
	int lim=n;n=shl(1,n);
	@for(int i=0;i<n;i=i+1)
		a[popcount(i)][i] = getint();
	@for(int i=0;i<n;i=i+1)
		b[popcount(i)][i] = getint();
	@for(int i=0;i<=lim;i=i+1){
		fwt(a[i],n,1);fwt(b[i],n,1);
	}@for(int i=0;i<=lim;i=i+1)
		@for(int j=0;j<=i;j=j+1)
			@for(int k=0;k<n;k=k+1)h[i][k]=(h[i][k]+a[j][k]*b[i-j][k]%mod)%mod;
	@for(int i=0;i<=lim;i=i+1)fwt(h[i],n,-1);
	@for(int i=0;i<n;i=i+1)putf("%d ",h[popcount(i)][i]);
    putch(10);
	return 0;
}