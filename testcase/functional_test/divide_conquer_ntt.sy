const int N=3e4,p=998244353,g=3,gi=332748118;

int multiply(int a, int n){
  int res = 0;
  while(n){
    if(n%2 == 1){
      res=res+a;
      res%=p;
    }
    a = a + a;
    a %= p;
    n/=2;
  }
  return res;
}

int qpow(int a,int n)
{
	int res=1;
	while(n)
	{
		if(n%2 == 1){
			res=multiply(res,a)%p;
        }
		a=multiply(a,a);
		n/=2;
	}
	return res;
}

int pls(int x,int y){x+=y;if(x>=p){return x-p;}else{return x;}}
int dec(int x,int y){x-=y;if(x<0){return x+p;}else{return x;}}
int mul(int x,int y){return multiply(x,y);}

int F[N],G[N],ans[N],a[N];
int n,l=1,r[N];

void ntt(int a[],int limit,int f)
{
    @for (int i=0; i<limit; i=i+1) if (i<r[i]){
        int tmp = a[i];
        a[i] = a[r[i]];
        a[r[i]] = tmp;
    }
    @for (int i=1; i<limit; i=i*2)
    {
        int t = 0;
        if(f==1){
            t = g;
        }else{
            t = gi;
        }
        int wn=qpow(t,(p-1)/(i*2));
        @for (int j=0; j<limit; j=j+(i*2))
        {
            int w=1;
            @for (int k=0; k<i; k=k+1)
            {
                int x=a[j+k],y=mul(w,a[i+j+k]);
                a[j+k]=pls(x,y);a[j+k+i]=dec(x,y);
                w=mul(w,wn);
            }
        }
    }
    if (f==-1) {
        int inv=qpow(limit,p-2);
        @for (int i=0; i<limit; i=i+1) a[i]=mul(a[i],inv);
    }
}

int or(int a,int b)
{
    // putf("%d %d ",a,b);
    int i=0;
    int ans = 0;
    int p2 = 1;
    while(i<30){
        int t1=a%2,t2=b%2;
        if(t1+t2>=1){
            ans = ans + p2;
        }
        p2 = p2*2;
        a = a/2;
        b = b/2;
        i = i + 1;
    }
    // putf("%d\n",ans);
    return ans;
}

void ntt_init(int l)
{
    @for (int i=0; i<l; i=i+1) {
        r[i] = r[i/2]/2;
        if (i%2==1) {
            r[i] = or(r[i],l/2);
        }
    }
}

void divide_conquer_ntt(int L,int R)
{
    if(L+1>=R){return;}
    int mid=(L+R)/2;
    divide_conquer_ntt(L,mid);
    int len=R-L;
    ntt_init(len);
    @for(int i=0;i<len;i=i+1){G[i]=a[i];}
    @for(int i=L;i<mid;i=i+1){F[i-L]=ans[i];}
    @for(int i=mid;i<R;i=i+1){F[i-L]=0;}
    ntt(F,len,1);
    ntt(G,len,1);
    @for(int i=0;i<len;i=i+1){
        F[i]=multiply(F[i],G[i]);
    }
    ntt(F,len,-1);
    @for(int i=mid;i<R;i=i+1){
        ans[i]=(ans[i]+F[i-L])%p;
    }
    divide_conquer_ntt(mid,R);
}
int main()
{
    n=getint();
    @for(int i=1;i<n;i=i+1){a[i]=getint();}
    while(l<n){
        l*=2;
    }
    ans[0]=1;
    divide_conquer_ntt(0,l);
    @for(int i=0;i<n;i=i+1){
        putf("%d ",ans[i]);
    }putf("\n");
    return 0;
}