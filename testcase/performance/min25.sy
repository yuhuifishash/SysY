const int MOD=1000000007,inv2=500000004,inv3=333333336;
int prime[1000005],num,sp1[1000005],sp2[1000005];
int n,Sqr,tot,g1[1000005],g2[1000005],w[1000005],ind1[1000005],ind2[1000005];
int flag[1000005];

int multiply(int a, int n){
  int res = 0;
  while(n){
    if(n%2 == 1){
      res=res+a;
      res%=MOD;
    }
    a = a + a;
    a %= MOD;
    n/=2;
  }
  return res;
}
int select(int cond,int a,int b){
    if(cond){
        return a;
    }
    return b;
}
int le(int a,int b){
    if(a<=b){
        return 1;
    }
    return 0;
}
int ne(int a,int b){
    if(a!=b){
        return 1;
    }
    return 0;
}

void pre(int n)
{
    flag[1]=1;
    @for(int i=1;i<=n;i=i+1)
    {
        if(!flag[i])
        {
            num=num+1;
            prime[num]=i;
            sp1[num]=(sp1[num-1]+i)%MOD;
            sp2[num]=(sp2[num-1]+i*i)%MOD;
        }
        @for(int j=1;j<=num&&prime[j]*i<=n;j=j+1)
        {
            flag[i*prime[j]]=1;
            if(i%prime[j]==0)break;
        }
    }
}
int S(int x,int y)
{
    if(prime[y]>=x)return 0;
    int k=select(le(x,Sqr),ind1[x],ind2[n/x]);
    int ans=(g2[k]-g1[k]+MOD-(sp2[y]-sp1[y])+MOD)%MOD;
    @for(int i=y+1;i<=num && prime[i]*prime[i]<=x;i=i+1)
    {
        int pe=prime[i];
        @for(int e=1;pe<=x;e=e+1)
        {
            int xx=pe%MOD;
            ans=(ans+xx*(xx-1)%MOD*(S(x/pe,i)+ne(e,1)))%MOD;
            pe=pe*prime[i];
        }
    }
    return ans%MOD;
}
float my_sqrt(float n)
{
    float x = n;
    float last;
    if(x < 0.0001 && x > -0.0001){
        return 0;
    }
    int i = 0;
    while(i < 20){
        last = x;
        x = (x + n/x)/2;
        i = i+1;
    }
    return x;
}

int main()
{
    n=getint();
    Sqr=my_sqrt(n);
    pre(Sqr);
    @for(int i=1;i<=n;i=i)
    {
        int j=n/(n/i);
        tot+=1;
        w[tot]=n/i;
        g1[tot]=w[tot]%MOD;
        g2[tot]=multiply(multiply(g1[tot]*(g1[tot]+1)/2%MOD,(2*g1[tot]+1)),inv3);
        g2[tot]-=1;
        g1[tot]=g1[tot]*(g1[tot]+1)/2%MOD-1;
        if(n/i<=Sqr)ind1[n/i]=tot;
        else ind2[n/(n/i)]=tot;
        i=j+1;
    }
    @for(int i=1;i<=num;i=i+1)
    {
        @for(int j=1;j<=tot&&prime[i]*prime[i]<=w[j];j=j+1)
        {
            int k=select(le(w[j]/prime[i],Sqr),ind1[w[j]/prime[i]],ind2[n/(w[j]/prime[i])]);
            g1[j]-=multiply(prime[i],(g1[k]-sp1[i-1]+MOD)%MOD);
            g2[j]-=multiply(prime[i]*prime[i]%MOD,(g2[k]-sp2[i-1]+MOD)%MOD);
            g1[j]%=MOD;g2[j]%=MOD;
            if(g1[j]<0)g1[j]+=MOD;
            if(g2[j]<0)g2[j]+=MOD;
        }
    }
    putf("%d\n",(S(n,0)+1)%MOD);
    return 0;
}